<?xml version="1.0"?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      internalLogLevel="Warn"
      internalLogFile="c:\temp\internal-nlog.txt">

  <extensions>
    <add assembly="NLog.Web.AspNetCore"/>
  </extensions>

  <targets>
    <target xsi:type="File" name="allfile" fileName="${basedir}\logs\GDStationaryNetCore\${shortdate}.log" encoding="utf-8" layout="[${longdate}][${machinename}][${level}] ${message} ${exception}" />
    <target xsi:type="Null" name="blackhole" />
    
    <target xsi:type="Database" name="database">
      <connectionString>${gdc:item=defaultConnection}</connectionString>
      <!--
            Remarks:
              The appsetting layouts require the NLog.Extended assembly.
              The aspnet-* layouts require the NLog.Web assembly.
              The Application value is determined by an AppName appSetting in Web.config.
              The "NLogDb" connection string determines the database that NLog write to.
              The create dbo.Log script in the comment below must be manually executed.
 
            Script for creating the dbo.Log table.
 
            SET ANSI_NULLS ON
            SET QUOTED_IDENTIFIER ON
            CREATE TABLE [dbo].[Log] (
                [Id] [int] IDENTITY(1,1) NOT NULL,
                [Application] [nvarchar](50) NOT NULL,
                [Logged] [datetime] NOT NULL,
                [Level] [nvarchar](50) NOT NULL,
                [ClientIp] [nvarchar](50) NOT NULL,
                [Message] [nvarchar](max) NOT NULL,
                [Logger] [nvarchar](250) NULL,
                [Callsite] [nvarchar](max) NULL,
                [Exception] [nvarchar](max) NULL,
              CONSTRAINT [PK_dbo.Log] PRIMARY KEY CLUSTERED ([Id] ASC)
                WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
            ) ON [PRIMARY]
      -->

      <commandText>
        insert into dbo.Log (
        Application, Logged, Level, ClientIp, Message,
        Logger, CallSite, Exception
        ) values (
        @Application, @Logged, @Level, @ClientIp, @Message,
        @Logger, @Callsite, @Exception
        );
      </commandText>

      <parameter name="@application" layout="LogNook Service" />
      <parameter name="@logged" layout="${date}" />
      <parameter name="@level" layout="${level}" />
      <parameter name="@clientIp" layout="${aspnet-request-ip}" />
      <parameter name="@message" layout="url: ${aspnet-request-url} | action: ${aspnet-mvc-action} | ${message}" />

      <parameter name="@logger" layout="${logger}" />
      <parameter name="@callSite" layout="${callsite:filename=true}" />
      <parameter name="@exception" layout="${exception:tostring}" />
    </target> <!-- Database -->
  </targets>
  <rules>
    <!--Skip Microsoft logs -->
    <logger name="Microsoft.*" minlevel="Trace" writeTo="blackhole" final="true" />
    <!--All logs -->
    <logger name="*" minlevel="debug" writeTo="database" />
  </rules>
      
</nlog>